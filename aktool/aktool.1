'\" t
.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "AKTOOL" "1" "нояб. 15, 2024" "версия библиотеки 0.9.17" "libakrypt"
.SH NAME
aktool \- Правила пользования
.sp
\fIaktool\fP \- консольная утилита, предназначенная для криптографической защиты данных в пространстве пользователя.
.sp
Утилита предоставляет интерфейс к различным криптографическим
преобразованиям таким, как шифрование и контроль целостности данных,
выработка и проверка электронной подписи, генерация криптографических
ключей и паролей, создание и верификация сертификатов открытых ключей.
.SH ОПИСАНИЕ
.sp
Синтаксис выполнения программы:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool команда [опции] [файл или каталог]
.EE
.UNINDENT
.UNINDENT
.sp
Каждая команда определяет отдельный класс криптографических
преобразований и функциональных возможностей. В настоящее время
доступны следующие команды.
.TS
box center;
l|l|l.
T{
Краткая форма
T}	T{
Полная форма
T}	T{
Описание
T}
_
T{
a
T}	T{
asn1parse
T}	T{
Декодирование и печать ASN.1 данных
T}
_
T{
e
T}	T{
encrypt
T}	T{
Зашифрование данных пользователя
T}
_
T{
d
T}	T{
decrypt
T}	T{
Расшифрование данных пользователя
T}
_
T{
i
T}	T{
icode
T}	T{
Вычисление контрольной суммы или имитовставки
T}
_
T{
k
T}	T{
key
T}	T{
Управление ключевой информацией
T}
_
T{
s
T}	T{
show
T}	T{
Вывод служебной и справочной информации
T}
_
T{
t
T}	T{
test
T}	T{
Тестирование корректности и скорости работы
T}
.TE
.sp
Получить информацию о доступных опциях и параметрах любой
команды можно с помощью вызова:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool команда \-\-help
.EE
.UNINDENT
.UNINDENT
.sp
Получить информацию о текущей версии утилиты и компиляторе, которым она была собрана,
можно с помощью вызова:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool \-\-version
.EE
.UNINDENT
.UNINDENT
.SH УПРАВЛЕНИЕ КЛЮЧЕВОЙ ИНФОРМАЦИЕЙ
.sp
Команда \fIkey\fP (короткая форма \fIk\fP) позволяет вырабатывать секретные и открытые ключи
для дальнейшего использования в алгоритмах шифрования, контроля целостности,
процедурах выработки и проверки электронной подписи и т.п.
.sp
Поддерживается инфраструктура сертификатов открытых ключей, а также
генерация ключей парной связи (симметричных ключей)
в соответствиии со схемой Блома распределения ключевой информации.
.sp
Команда \fIkey\fP позволяет сохранять секретные ключи в файлы или
ключевое хранилище в контейнере, формат которого является открытым
и распространяется вместе с документацией к библиотеке \fIlibakrypt\fP\&.
Перед сохранением секретного ключа пользователю предлагается
ввести пароль, используемый для шифрования созданного секретного ключа.
Ввод пароля можно осуществлять как в символьном, так и в шестнацатеричном формате.
.sp
Вырабатываемые открытые ключи могут сохраняться как в формате запроса на сертификат,
так и в формате собственно сертификата в соответствии с рекомендациями
Р 1323565.1.23\-2018. Также команда \fIkey\fP позволяет просматривать и
изменять параметры созданных ранее ключей.
.SS Опции команды key
.INDENT 0.0
.TP
.B \-a, \-\-algorithm=метод
.UNINDENT
.sp
Опция позволяет определить метод или алгоритм, используемый для генерации ключевой
информации. Для этого необходимо указать его имя или идентификатор.
Опция необходима в некоторых схемах выработки ключей, например, при использовании \fI\%схемы Блома\fP\&.
.INDENT 0.0
.TP
.B \-\-ca\-cert=файл
.UNINDENT
.sp
Опция позволяет указать имя файла, содержащего сертификат открытого ключа центра сертификации.
Опция может использоваться для выработки и верификации пользовательских сертификатов.
.INDENT 0.0
.TP
.B \-\-ca\-key=файл
.UNINDENT
.sp
Опция позволяет указать имя файла, содержащего секретный ключ центра сертификации.
Опция может применяться при генерации пользовательских сертификатов из запросов на сертификат.
Данная опция является другой формой опции \fI\%\-\-key\fP\&.
.INDENT 0.0
.TP
.B \-\-curve=имя
.UNINDENT
.sp
Опция позволяет указать имя или идентификатор эллиптической кривой,
которой принадлежит открытый ключ.
.INDENT 0.0
.TP
.B \-\-days=число
.UNINDENT
.sp
Опция позволяет определить срок действия секретного или открытого ключа.
Срок исчисляется заданным количеством дней, начиная с момента вызова утилиты.
.INDENT 0.0
.TP
.B \-\-field=[ 256, 512 ]
.UNINDENT
.sp
Опция позволяет указать \fIn\fP \- степень расширения конечного поля \emathbb F_{2^n}, используемого для реализации
криптографических алгоритмов. Допустимыми аргументами опции являются значения 256 или 512 бит.
.INDENT 0.0
.TP
.B \-\-format=[ der, pem, certificate ]
.UNINDENT
.sp
Опция позволяет указать формат хранения вырабатываемого файла с ключевой информацией.
Допустимыми аргументами опции являются значения \fIder\fP, \fIpem\fP или \fIcertificate\fP\&.
.INDENT 0.0
.TP
.B \-\-id=строка
.UNINDENT
.sp
Опция позволяет определить имя или идентификатор владельца ключа.
.sp
В случае использования данной опции одовременно с созданием сертификата открытого ключа или запроса на сертификат
значение \fIстрока\fP определяет расширенное имя владельца.
Расширенное имя владельца должно состоять из последовательности секций вида
\fI/секция1=значение/секция2=значение2\fP,
где название секции должно принимать значение из множества:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
\fIem\fP (электронная почта), \fIcn\fP (основное имя), \fIct\fP (страна), \fIst\fP (область), \fIlt\fP (поселение), \fIsa\fP (улица), \fIor\fP (организация), \fIou\fP (отдел), \fItl\fP (должность), \fIsu\fP (фамилия), \fIgn\fP (имя), \fIps\fP (псевдоним) и \fIsn\fP (серийный номер).
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Также поддерживаются названия секций, рекомендованные для использования в Российской Федерации:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
\fIog\fP (ОГРН), \fIoi\fP (ОГРНИП), \fIsi\fP (СНИЛС), \fIin\fP (ИНН физического лица) и \fIle\fP (ИНН юридического лица).
.UNINDENT
.UNINDENT
.UNINDENT
.sp
В случае создания сертификатов или запросов на сертификат открытого ключа
допускается использование опции  без указания имени секции. В этом случае
переданная строка определяет основное имя владельца ключа.
.INDENT 0.0
.TP
.B \-\-id\-hex=строка
.UNINDENT
.sp
Опция позволяет указать имя владельца секретного ключа в виде шестнадцатеричной последовательности.
Данная опция не применяется при выработке сертификатов или запросов на сертификат открытого ключа.
.INDENT 0.0
.TP
.B \-\-inpass=строка
.UNINDENT
.sp
Опция позволяет указать пароль доступа к считываемому секретному ключу в командной строке.
Использование данной опции может привести к компрометации ключевой информации.
.INDENT 0.0
.TP
.B \-\-inpass\-hex=строка
.UNINDENT
.sp
Опция позволяет указать пароль доступа к считываемому секретному ключу в командной строке
в виде шестнадцатеричной последовательности.
Использование данной опции может привести к компрометации ключевой информации.
.INDENT 0.0
.TP
.B \-\-key=файл
.UNINDENT
.sp
Опция позволяет указать имя файла, содержащего считываемый секретный ключ
симметричного или асимметричного алгоритма.
.INDENT 0.0
.TP
.B \-\-label=строка
.UNINDENT
.sp
Опция позволяет присвоить секретному ключу пользовательскую метку или описание.
.INDENT 0.0
.TP
.B \-n, \-\-new
.UNINDENT
.sp
Опция создает новый секретный ключ или ключевую пару для заданного криптографичеспкого алгоритма.
.INDENT 0.0
.TP
.B \-\-no\-outpass
.UNINDENT
.sp
Опция позволяет не указывать пароль доступа к контейнеру создаваемого секретного ключа.
В этом случае ключ помещается в контейнер в незашифрованном виде, что является потенциально небезопасным.
.INDENT 0.0
.TP
.B \-\-op
.UNINDENT
.sp
Короткая форма опции \fI\%\-\-output\-public\-key\fP\&.
.INDENT 0.0
.TP
.B \-\-outpass=строка
.UNINDENT
.sp
Опция позволяет указать пароль доступа к созданному секретному ключу прямо в командной строке.
Использование данной опции не является безопасным и может привести к компрометации ключевой ифнормации.
.INDENT 0.0
.TP
.B \-\-outpass\-hex=строка
.UNINDENT
.sp
Опция позволяет указать пароль доступа к созданному секретному ключу прямо в командной строке
в виде шестнадцатеричной последовательности.
Использование данной опции не является безопасным и может привести к компрометации ключевой ифнормации.
.INDENT 0.0
.TP
.B \-\-output\-public\-key=файл
.UNINDENT
.sp
Опция позволяет указать имя файла, в котором будет сохранен созданный сертификат или
запрос на сертификат открытого ключа. Имеет короткую форму \fI\%\-\-op\fP\&.
.INDENT 0.0
.TP
.B \-o, \-\-output\-secret\-key=файл
.UNINDENT
.sp
Опция позволяет указать имя файла, в котором будет сохранен созданный секретный ключ.
.INDENT 0.0
.TP
.B \-\-p7b\-create
.UNINDENT
.sp
Опция позволяет поместить один или несколько сертификатов центра сертификации в один контейнер
в формате PKCS #7 (обычно используется расширение \fIp7b\fP).
Помещаемые в контенер сертифкаты указываются в качестве последних аргументов командной строки.
.INDENT 0.0
.TP
.B \-\-p7b\-ls=файл
.UNINDENT
.sp
Опция позволяет вывести в консоль список сертификатов,
хранящихся в PKCS #7 контейнере.
.INDENT 0.0
.TP
.B \-\-p7b\-split=файл
.UNINDENT
.sp
Опция позволяет извлечь из контейнера в формате PKCS #7
все доступные сертификаты и сохранить их в виде отдельных файлов (в кодировке \fIder\fP или \fIpem\fP).
.INDENT 0.0
.TP
.B \-\-random=имя
.UNINDENT
.sp
Опция позволяет указать имя или идентификатор генератора псевдослучайных последовательностей,
используемого для выработки ключевой информации или электронной подписи.
По умолчанию устанавливается генератор, зависящий от операционной системы, в которой выполняется утилита.
В \fIUnix\fP\-системах это генератор, доступ к которому обеспечивается символьным устройством \fI/dev/random\fP\&.
.INDENT 0.0
.TP
.B \-\-random\-file=файл
.UNINDENT
.sp
Опция позволяет в явном виде указать имя файла из которого происходит чтение псевдослучайных последовательностей.
Использование данной опции целесообразно для доступа к физическим генераторам, предоставляющим доступ к вырабатываемым
данным посредством символьных устройств.
.INDENT 0.0
.TP
.B \-\-repo=каталог
.UNINDENT
.sp
Опция указывает путь к хранилищу доверенных сертификатов.
Если опция не указана, используется установленный по\-умолчанию каталог
(в Unix\-системах это может быть \fI/usr/share/ca\-certificates/libakrypt\fP\&.
Может использоваться совместно с
опциями: \fI\%\-\-repo\-add\fP, \fI\%\-\-repo\-check\fP, \fI\%\-\-repo\-ls\fP и \fI\%\-\-repo\-rm\fP\&.
.INDENT 0.0
.TP
.B \-\-repo\-add=файл
.UNINDENT
.sp
Опция добавляет сертификат в хранилище доверенных сертификатов.
В качестве аргумента опции может выступать как \fIфайл\fP с сертификатом ключа (в \fIpem\fP или \fIder\fP\-кодировке),
так и контейнер сертификатов в формате PKCS #7 (обычно используется расширение \fIp7b\fP).
Для записи могут потребоваться права доступа к хранилищу.
.INDENT 0.0
.TP
.B \-\-repo\-check
.UNINDENT
.sp
Опция проверяет валидность всех сертификатов, содержащихся в хранилище доверенных сертификатов.
При необходимости, функция приводит имена и форматы хранения сертификатов к единому виду: \fBсерийный_номер.cer\fP,
а также удаляет из хранилища лишние файлы и невалидные сертификаты.
Для удаления данных могут потребоваться права доступа к хранилищу.
.INDENT 0.0
.TP
.B \-\-repo\-ls
.UNINDENT
.sp
Опция выводит список доверенных сертификатов, находящихся
в ключевом хранилище.
.INDENT 0.0
.TP
.B \-\-repo\-rm=срока
.UNINDENT
.sp
Опция удаляет из хранилища доверенных сертификатов те сертификаты,
в серийных номерах которых содержится указанная \fIстрока\fP\&.
Длина строки должна быть не менее 6 символов.
.INDENT 0.0
.TP
.B \-\-secret\-key\-number=строка
.UNINDENT
.sp
Опция позволяет указать в явном виде номер секретного ключа (как строку, состоящую не более чем из 64 шестнадцатеричных символов).
Данный номер может быть использован при создании новых секретных ключей, а также при
создании сертификатов открытых ключей с расширением, задаваемым опцией \fI\%\-\-key\-encipherment\fP\&.
.INDENT 0.0
.TP
.B \-\-show=файл
.UNINDENT
.sp
Опция позволяет вывести в простом текстовом формате
значения параметров секретного ключа (симметричного или асимметричного).
.INDENT 0.0
.TP
.B \-\-show\-algorithm=файл
.UNINDENT
.sp
Опция позволяет вывести идентификатор алгоритма, для которого предназначен секретный ключ.
.INDENT 0.0
.TP
.B \-\-show\-curve=файл
.UNINDENT
.sp
Опция позволяет вывести идентификатор эллиптической кривой, которой принадлежит
открытый ключ, соответствующий указанному секретному ключу. Результат определен только для
секретных ключей асимметричных алгоритмов.
.INDENT 0.0
.TP
.B \-\-show\-label=файл
.UNINDENT
.sp
Опция позволяет вывести метку секретного ключа.
.INDENT 0.0
.TP
.B \-\-show\-number=файл
.UNINDENT
.sp
Опция позволяет вывести уникальный номер секретного ключа.
.INDENT 0.0
.TP
.B \-\-show\-public\-key=файл
.UNINDENT
.sp
Опция позволяет вывести уникальный номер открытого ключа,
соответствующего указанному секретному ключу. Результат определен только для
секретных ключей асимметричных алгоритмов.
.INDENT 0.0
.TP
.B \-\-show\-resource=файл
.UNINDENT
.sp
Опция позволяет вывести оставшийся ресурс секретного ключа.
.INDENT 0.0
.TP
.B \-s, \-\-sign файл(ы)
.UNINDENT
.sp
Опция подписывает созданный ранее запрос на сертификат открытого ключа и создает сертификат.
В качестве аргумента опции может выступать одно или несколько имен файлов,
содержащих запросы на сертификат. Также допускается использование шаблонов, например, \fI*.csr\fP\&.
В случае нескольких запросов они все будут подписаны одним и тем же ключом центра сертификации.
.INDENT 0.0
.TP
.B \-\-size=[ 1, \&.., 4096 ]
.UNINDENT
.sp
Опция позволяет указать размер ключевого множества для создаваемого секретного ключа, например, в \fI\%схеме Блома\fP\&.
Максимально допустимым значением в настоящее время является величина 4096.
.INDENT 0.0
.TP
.B \-t, \-\-target=имя
.UNINDENT
.sp
Опция позволяет указать имя криптографического алгоритма для которого предназначается создаваемый секретный ключ.
Для генерации простой незашифрованной последовательности заданного размера, не связанной ни с каким криптографическим алгоритмом,
в качестве имени алгоритма должна быть указана строка \fIundefined\fP\&.
.INDENT 0.0
.TP
.B \-\-to
.UNINDENT
.sp
Короткая форма опции \fI\%\-\-format\fP\&.
.INDENT 0.0
.TP
.B \-v, \-\-verify=файл
.UNINDENT
.sp
Опция выполняет верификацию открытого ключа,
который может быть задан в виде сертификата, запроса на сертификат открытого ключа или контейнера сертификатов
в формате PKCS #7 (обычно используется расширение \fIp7b\fP).
В качестве параметров опции может быть указан один или несколько файлов, а также шаблон, например, \fI*.crt\fP\&.
Если указана опция \fI\%\-\-verbose\fP, то утилита выводит значение открытого ключа в консоль.
.SS Управление расширениями сертификатов открытых ключей
.sp
Далее указаны опции, которые могут быть использованы для управления расширениями сертификатов открытых ключей.
.INDENT 0.0
.TP
.B \-\-authority\-name
.UNINDENT
.sp
Опция добавляет в расширение \fBAuthorityKeyIdentifier\fP расширенное имя центра сертификации.
По умолчанию данная возможность отключена.
.INDENT 0.0
.TP
.B \-\-ca
.UNINDENT
.sp
Опция объединяет в себе вызов двух опций: \fI\%\-\-ca\-ext\fP = \fBtrue\fP и \fI\%\-\-key\-cert\-sign\fP\&.
Должна использоваться при создании сертифката открытого ключа центра сертификации.
.INDENT 0.0
.TP
.B \-\-ca\-ext=[ true, false ]
.UNINDENT
.sp
Опция позволяет указать, может ли создаваемый сертификат открытого ключа
являться сертификатом центра сертификации.
Допустимыми значениями опции являются значения \fItrue\fP или \fIfalse\fP\&.
.INDENT 0.0
.TP
.B \-\-pathlen=число
.UNINDENT
.sp
Опция устанавливает максимальную длину цепочки сертификации.
Имеет смысл только одновремено со значением \fI\%\-\-ca\-ext\fP = \fBtrue\fP\&.
.INDENT 0.0
.TP
.B \-\-digital\-signature
.UNINDENT
.sp
Опция разрешает использование открытого ключа для проверки электронной подписи под пользовательскими данными
(в расширение \fBKeyUsage\fP добавляется бит \fBDigital Signature\fP)
.INDENT 0.0
.TP
.B \-\-key\-encipherment
.UNINDENT
.sp
Опция разрешает использование открытого ключа для зашифрования ключевой информации
(в расширение \fBKeyUsage\fP добавляется бит \fBKey Encipherment\fP)
.INDENT 0.0
.TP
.B \-\-data\-encipherment
.UNINDENT
.sp
Опция разрешает использование открытого ключа для зашифрования пользовательских данных
(в расширение \fBKeyUsage\fP добавляется бит \fBData Encipherment\fP)
.INDENT 0.0
.TP
.B \-\-key\-agreement
.UNINDENT
.sp
Опция разрешает использование открытого ключа в протоколах выработки ключевой информации
(в расширение \fBKeyUsage\fP добавляется бит \fBBKey Agreement\fP)
.INDENT 0.0
.TP
.B \-\-key\-cert\-sign
.UNINDENT
.sp
Опция разрешает использование открытого ключа для проверки подписи под сертификатами открытых ключей
(соответствующий секретный ключ может быть использован для выработки подписи под сертификатами открытых ключей)
(в расширение \fBKeyUsage\fP добавляется бит \fBCertificate Sign\fP)
.INDENT 0.0
.TP
.B \-\-crl\-sign
.UNINDENT
.sp
Опция разрешает использование открытого ключа для проверки подписи под списками отозванных сертификатов
(в расширение \fBKeyUsage\fP добавляется бит \fBCRL Sign\fP)
.SS Примеры выработки ключей симметричных криптографических алгоритмов
.sp
Создать секретный ключ алгоритма блочного шифрования «Магма» можно с помощью следующей команды:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool k \-nt magma \-o magma.key
.EE
.UNINDENT
.UNINDENT
.sp
В процессе выполнения указанной команды пользователю будет предложено ввести пароль доступа,
на котором будет зашифрованно значение созданного ключа. С использованием опции \fI\%\-\-outpass\fP
можно определить пароль доступа к созданному ключу прямо в командной строке.
.sp
Аналогично, создание нового секретного ключа выработки имитовставки для алгоритма HMAC,
основанного на использовании функции хеширования «Стрибог256»,
можно выполнить с помощью следующего вызова:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool k \-nt hmac\-streebog256 \-o secret\-hmac256.key \e\e
   \-\-label \(dqused for testing purpose\(dq \-\-random\-file /dev/random
.EE
.UNINDENT
.UNINDENT
.sp
При этом, значение создаваемого ключа считывается из файла \fI/dev/random\fP,
предоставляющего в \fIUnix\fP\-системах доступ к биологическому генератору случайных чисел, см. \fI\%[P1323565.1.012\-2017]\fP, раздел 3.4.
Опция программы \fI\%\-\-label\fP задает метку ключа \fBused for testing purpose\fP,
а сам ключ будет сохранен в файл \fIsecret\-hmac256.key\fP\&.
.sp
Посмотреть информацию о созданном ключе можно с помощью одного из следующих вызовов:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool k \-s secret\-hmac256.key
aktool a secret\-hmac256.key
.EE
.UNINDENT
.UNINDENT
.sp
В первом случае будет выведена информация о параметрах созданного ключа в виде простой таблицы следующего вида:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
Тип:
  Симметричный секретный ключ
Алгоритм:
  hmac function (hmac\-streebog256, 1.2.643.7.1.1.4.1)
Номер:
  64fd34212dad3aa2d6e3c1646237b0ab6a167833aa018aa251f6b6b9b6328a2c
Ресурс: 65536 (key usage resource)
  от: 25 янв 2022 23:03:51 (Понедельник) MSK
  до: 25 янв 2023 23:03:51 (Вторник) MSK
Метка:
  used for testing purpose
.EE
.UNINDENT
.UNINDENT
.sp
Во втором случае будет выведена ASN.1 структура, содержащая, в частности,
зашифрованное значение созданного ключа.
.SS Примеры выработки ключевых пар и сертификатов открытых ключей
.sp
Выработка ключевой пары должна производиться с явным указаним алгоритма электронной подписи.
Например, ключевая пара для алгоритма ГОСТ Р 34.10\-2012 может быть выработана
с помощью следующего вызова:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool k \-nt sign256 \-o aktool256.key \-\-op aktool256_request.csr \-\-to pem
.EE
.UNINDENT
.UNINDENT
.sp
В процессе создания ключей будет запрошена и помещена в запрос на сертификат открытого ключа
информация о владельце создаваемого ключа. Созданый запрос будет сохранен в формате \fIpem\fP
(текстовый файл, содержащий двоичную последовательность в кодировке \fIbase64\fP).
Посмотреть содержимое созданных ключей можно следующим образом:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool k \-\-show aktool256.key
aktool k \-v aktool256_request.csr \-\-verbose
.EE
.UNINDENT
.UNINDENT
.sp
Для явного определения эллиптической кривой, которой принадлежит создаваемый открытый ключ,
необходимо воспользоваться опцией \fI\%\-\-curve\fP\&.
Для явного указания информации о владельце ключа необходимо воспользоваться опцией \fI\%\-\-id\fP\&.
.sp
В следующем примере создается ключевая пара и открытый ключ помещается в самоподписаный сертификат.
Синтаксис команды отличается от предыдущего только явным указанием эллиптической кривой и
аргументом опции \fI\%\-\-to\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool k \-nt sign512 \-\-curve ec512b \-o aktool512.key \-\-op aktool512_ca.crt \e\e
   \-\-to certificate \-\-id \(dq/cn=Aktool CA Team\(dq
.EE
.UNINDENT
.UNINDENT
.sp
Для подписи созданного ранее запроса на сертификат можно воспользоваться следующей командой:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool k \-s aktool256_request.csr \-\-ca\-key aktool512.key \e\e
   \-\-ca\-cert aktool512_ca.crt \-\-op aktool256_certificate.crt \-\-to pem
.EE
.UNINDENT
.UNINDENT
.sp
Для верификации и просмотра созданных сертификатов можно воспользоваться следующими командами:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool k \-v aktool256_request.csr \-\-verbose
aktool k \-v aktool256_certificate.crt \-\-ca\-cert aktool512_ca.crt \-\-verbose
.EE
.UNINDENT
.UNINDENT
.sp
Отметим, что во втором примере в явном виде указывается сертификат открытого ключа удостоверяющего центра,
используемый для проверки подписи под сертификатом пользователя.
.sp
Следующая команда помещает сертификат в хранилище
доверенных сертификатов (при помещении сертификата проверяется его валидность).
Это позволит функциям библиотеки находить
открытый ключ без дополнительных указаний со стороны пользователя:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool k \-\-repo\-add aktool512_ca.crt
.EE
.UNINDENT
.UNINDENT
.sp
В качестве примеров для работы с контейнерами сертификатов в формате PKCS #7 (обычно используется расширение \fIp7b\fP),
могут быть использованы следующие команды:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool k \-\-p7b\-create ca*.cer \-\-op cacer.p7b \-\-to pem
aktool k \-\-p7b\-ls cacer.p7b
aktool k \-v cacer.p7b
aktool k \-\-repo\-add cacer.p7b
.EE
.UNINDENT
.UNINDENT
.sp
В первом примере утилита помещает все валидные сертфикаты, имена которых удовлетворяют
шаблону поиска \fBca*.cer\fP, в контейнер с заданным именем \fIcacer.p7b\fP
в текстовом формате (с использованием кодировки \fIbase64\fP).
Далее, содержимое контейнера выводится в консоль, верифицируется и добавляется в хранидище доверенных сертификатов.
.sp
Добавим, что в состав исходных текстов библиотеки входит набор тестовых скриптов
(каталог \fIscripts\fP), содержащий большое количество примеров использования утилиты \fIaktool\fP
для выработки и верификации сертификатов открытых ключей.
.SS Примеры выработки ключевой информации в схеме Блома
.sp
Для генерации ключей парной связи (общих симметричных ключей) в схеме Блома \fI\%[BLOM82]\fP необходимо
выполнить последовательность из трех шагов:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
выработать мастер\-ключ,
.IP \(bu 2
выработать ключ пользователя c заданным идентификатором, например, \fBIDa\fP,
.IP \(bu 2
выработать ключ парной связи абонента \fBIDa\fP с другим абонентом, обладающим заданным идентификатором, например, \fBIDb\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Опишем перечисленые шаги более подробно.
.sp
На первом шаге необходимо выработать мастер\-ключ, представляющий собой квадратную матрицу из элементов конечного
поля \emathbb F_{2^n} для \fIn\fP равного 256 или 512 бит.
Выработать мастер\-ключ можно с помощью следующего вызова, явно указав
имя алгоритма генерации ключей: \fIblom\-master\fP или \fIblom\-matrix\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool k \-na blom\-master \-\-size 640 \-\-field 256 \-o master.key
.EE
.UNINDENT
.UNINDENT
.sp
В процессе выполнения указанной команды пользователю будет предложено ввести пароль доступа,
на котором будут зашифрованы вырабатываемые ключевые значения.
Определить используемый генератор случайных чисел можно с помощью опций \fI\%\-\-random\fP или \fI\%\-\-random\-file\fP\&.
.sp
В приведенном примере размер вырабатываемой матрицы составляет 640x640 элементов.
Матрица сохраняется в файл \fImaster.key\fP (cледует заметить,
что размер вырабатываемого мастер\-ключа должен
составлять 32 + \fIsize\fP x (\fIsize\fP + 1 ) x \fIfield\fP / 16 октетов
и для приведенного примера будет составлять \fI6563872\fP октетов).
.sp
На втором шаге, для выработки ключа абонента с идентификатором \fBIDa\fP, необходимо выполнить следующую команду,
явно указав имя алгоритма генерации ключей: \fIblom\-user\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool k \-na blom\-user \-\-key master.key \-o IDa.key \-\-id IDa
.EE
.UNINDENT
.UNINDENT
.sp
Выработанный ключ будет помещен в файл \fIIDa.key\fP\&.
.sp
На третьем шаге,
для выработки ключа, который будет использован абонентом с идентификатором \fBIDa\fP для связи
с абонентом, имеющим идентификатор \fBIDb\fP, необходимо выполнить следующую команду,
явно указав имя алгоритма генерации ключей: \fIblom\-pairwise\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool k \-na blom\-pairwise \-\-key IDa.key \-\-id IDb \-o pairwise\-ab.plain \-\-target undefined
.EE
.UNINDENT
.UNINDENT
.sp
Значение опции \fI\%\-\-target\fP = \fBundefined\fP говорит о том, что выработанный ключ парной связи
будет сохранен в файле \fIpairwise\-ab.plain\fP в незашифрованом виде.
Тот же ключ может быть выработан и сохранен в формате контейнера библиотеки следующим образом:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool k \-na blom\-pairwise \-\-key IDa.key \-\-id IDb \-o pairwise\-ab.key \e\e
   \-\-target kuznechik \-\-to pem \-\-label \(dqused for testing purpose\(dq
.EE
.UNINDENT
.UNINDENT
.sp
В этом случае, будет сформирован полноценный контейнер, содержащий мета\-информацию
о ключе парной связи. Полученный файл может быть просмотрен, например, с помощью программы \fIcat\fP
и будет иметь следующий вид:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
\-\-\-\-\-BEGIN ENCRYPTED SYMMETRIC KEY\-\-\-\-\-
MIIBOQYJKoUDAjQBfwEBMEkGCSqFAwI0AX8CATA8BggqhQMHAQEFAjAwBggqhQMH
AQEEAgQgAHB+xvFnuFDcr1hjTVoOzg9mrjHog+W2YMkA2nuFqiQCAgfQMIHgBgkq
hQMCNAF/AwEwgdIGCCqFAwcBAQUCBCCvdnxc1dJHhBjMc9fJCRAheXilh54enght
QJrU2UlDEwwYdXNlZCBmb3IgdGVzdGluZyBwdXJwb3NlMCgCAQACAyAAADAeFw0y
MDEyMTkyMjU3NTdaFw0yMTEyMTkyMjU3NTdaMGACAQECAQAEWGA2LJdbqSbk99Wu
vjPwoBcA/PmKb1hI8cIj9GwbbZljdGkDUvjwO1DgnfAsc7u/Fkumtvy/i/ejQEu/
o2Mg5v5P8bJwA0SCk+XRLluRmNYVsAYS8egjFXM=
\-\-\-\-\-END ENCRYPTED SYMMETRIC KEY\-\-\-\-\-
.EE
.UNINDENT
.UNINDENT
.sp
Добавим, что следующая последовательность команд может быть использована
абонентом с идентификатором \fBIDb\fP для получения ключа парной связи с абонентом,
связанным с идентификатором \fBIDa\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool k \-na blom\-user \-\-key master.key \-o IDb.key \-\-id IDb
aktool k \-na blom\-pairwise \-\-key IDb.key \-\-id IDa \-o pairwise\-ba.plain \-\-target undefined
.EE
.UNINDENT
.UNINDENT
.sp
В результате для абонента с идентификатором \fBIDb\fP будет получен ключ парной связи \fIpairwise\-ba.plain\fP
который, как легко проверить с помощью утилиты \fIxxd\fP, побайтно совпадает с выработанным ранее для абонента
с идентификатором \fBIDa\fP ключом \fIpairwise\-ab.plain\fP\&.:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
xxd \-g1 pairwise\-ab.plain
00000000: e2 fd af 33 30 55 22 b3 45 fd 2f 06 2b 91 45 50  ...30U\(dq.E./.+.EP
00000010: f5 70 a6 0d 3f 78 f7 0d 9e c4 41 b2 7b 5b f1 6b  .p..?x....A.{[.k

xxd \-g1 pairwise\-ba.plain
00000000: e2 fd af 33 30 55 22 b3 45 fd 2f 06 2b 91 45 50  ...30U\(dq.E./.+.EP
00000010: f5 70 a6 0d 3f 78 f7 0d 9e c4 41 b2 7b 5b f1 6b  .p..?x....A.{[.k
.EE
.UNINDENT
.UNINDENT
.sp
Реализация схемы Блома соотвествует рекомендациям
\X'tty: link https://tc26.ru/standarts/rekomendatsii-po-standartizatsii/r-1323565-1-028-2019-informatsionnaya-tekhnologiya-kriptograficheskaya-zashchita-informatsii-kriptograficheskie-mekhanizmy-zashchishchennogo-vzaimodeystviya-kontrolnykh-i-izmeritelnykh-ustroystv.html'\fI\%Р 1323565.1.028\-2019\fP\X'tty: link',
см. приложение Б.
.SH КОНТРОЛЬ ЦЕЛОСТНОСТИ
.sp
Команда \fIicode\fP (короткая форма \fIi\fP) позволяет вычислять контрольные суммы или имитовставки
для одного или нескольких файлов.
.sp
Для вычисления контрольных сумм могут быть использованы любые реализованные в библиотеке алгоритмы хеширования (бесключевого сжатия).
Для вычисления имитовставки необходимо использовать секретный ключ.
Данный ключ должен быть предварительно создан пользователем с использованием команды \fIkey\fP\&.
.sp
В настоящее время для вычисления имитовставки могут быть использованы следующие алгоритмы:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
\fIcmac\fP (ГОСТ Р 34.13\-2015),  \fIhmac\fP (Р 50.1.113\-2016) и \fInmac\fP (1323565.1.022\-2018).
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Поскольку некоторые алгоритмы вычисления имитовставки накладывают
ограничения на объем информации, обрабатываемой на одном ключе, то для таких алгоритмов вычисление имитоставки от очень больших
файлов может приводить к ошибке. Если Вам необходимо вычислять
имитовставки файлов с произвольной, сколь угодно большой длиной, то
используйте следующие алгоритмы: \fIhmac\-streebog256\fP, \fIhmac\-streebog512\fP\&.
.SS Опции команды icode
.INDENT 0.0
.TP
.B \-a, \-\-algorithm=метод
.UNINDENT
.sp
Опция позволяет указать метод вычисления контрольной суммы (алгоритма бесключевого хеширования).
В качестве параметра опции может выступать имя алгоритма, например \fIstreebog512\fP, или его идентификатор.
В случае, когда опция не определена, для вычисления контрольной суммы
используется бесключевая функция хеширования \fIstreebog256\fP\&.
В случае выработки имитовставки данная опция может быть опущена.
.INDENT 0.0
.TP
.B \-c, \-\-check=файл
.UNINDENT
.sp
Опция позволяет проверить контрольные суммы или имитовставки для
одного или нескольких файлов. Данные суммы должны быть вычислены
заранее и сохранены в указанном \fIфайле\fP\&. Если при проверке используется
алгоритм, отличный от установленного по\-умолчанию, необходимо указать
его имя или идентификатор (для алгоритмов хеширования), а также, при необходимости,
используемый секретный ключ.
.INDENT 0.0
.TP
.B \-\-dont\-show\-stat
.UNINDENT
.sp
Опция запрещает вывод в консоль статистической информации об общем
количестве проверенных файлов, количестве успешных или неуспешных
проверок и т.п. Используется только совместно с опцией \fI\%\-\-check\fP\&.
.INDENT 0.0
.TP
.B \-\-ignore\-errors
.UNINDENT
.sp
Опция запрещает останавливать процесс проверки контрольных сумм или
имитовставок в случае возникновения ошибок доступа или чтения
файлов, отсутствия файлов, содержащихся в списке и т.п.
Используется только совместно с опцией \fI\%\-\-check\fP\&.
.INDENT 0.0
.TP
.B \-\-inpass=строка
.UNINDENT
.sp
Опция позволяет указать пароль доступа к считываемому секретному ключу в командной строке.
Использование данной опции может привести к компрометации ключевой информации.
.INDENT 0.0
.TP
.B \-\-inpass\-hex=строка
.UNINDENT
.sp
Опция позволяет указать пароль доступа к считываемому секретному ключу в командной строке
в виде шестнадцатеричной последовательности.
Использование данной опции может привести к компрометации ключевой информации.
.INDENT 0.0
.TP
.B \-\-key=файл
.UNINDENT
.sp
Опция позволяет указать имя файла, содержащего используемый секретный ключ
алгоритма выработки имитовставки.
.INDENT 0.0
.TP
.B \-m, \-\-mode=режим
.UNINDENT
.sp
Опция позволяет уточнить алгоритм вычисления имитовставки (\fIcmac\fP, \fIomac\-acpkm\fP и т.п.),
реализуемый с использованием определяемого секретным ключом алгоритма блочного шифрования.
При вычислении контрольных сумм, а также при использовании алгоритмов семейства \fIhmac\fP,
данная опция не применяется.
.INDENT 0.0
.TP
.B \-\-no\-derive
.UNINDENT
.sp
По\-умолчанию, для вычисления имитовставки вырабатывается производный ключ,
зависящий от указанного опцией :option::\fI–key\fP исходного ключа и имени имитозащищаемого файла. Использование данной опции
приводит к запрету вычисления производного ключа и вычислению имитовставки на исходном ключе.
.INDENT 0.0
.TP
.B \-o, \-\-output=файл
.UNINDENT
.sp
Опция определяет имя файла, в который записываются вычисленные
значения контрольных сумм или имитовставок. Данный файл может быть
указан в качестве параметра опции \fI\%\-\-check\fP\&.
.INDENT 0.0
.TP
.B \-p, \-\-pattern=строка
.UNINDENT
.sp
Опция указывает шаблон (маску) поиска файлов, к которым применяется процедура
вычисления контрольной суммы или имитовставки.
.INDENT 0.0
.TP
.B \-r, \-\-recursive
.UNINDENT
.sp
Опция указывает, что при вычислении контрольных сумм или
имитовставок, должна выполняться рекурсивная процедура обхода
текущего и всех вложенных каталогов. Опция имеет смысл только в том
случае, когда в аргументах вызова утилиты указано имя каталога.
.INDENT 0.0
.TP
.B \-\-reverse\-order
.UNINDENT
.sp
Опция указывает, что все выводимые и вводимые последовательности
октетов, должны обрабатываться в обратном порядке. Использование
данной опции целесообразно для вывода результатов в \fIbig endian\fP
порядке следования октетов. По\-умолчанию, используется \fIlitte\-endian\fP порядок.
.INDENT 0.0
.TP
.B \-\-seed=строка
.UNINDENT
.sp
При генерации производных ключей используется криптографическая функция, инициализируемая двумя значениями \- именем файла и
заданной \fIстрокой\fP\&. В случае, если данная опция не указана, то используется определяемое утилитой
фиксированное значение.
.INDENT 0.0
.TP
.B \-\-tag
.UNINDENT
.sp
Опция указывает, что значения контрольных сумм или имитовставок
должны выводиться в формате, принятом в операционных системах
семейства BSD. В таком формате указывается не только имя файла и его
контрольная сумма или имитовставка, но и алгоритм, с помощью которого данная сумма
была посчитана.
.SS Примеры использования команды icode
.sp
Приведимый ниже вызов утилиты позволяет вычислить контрольную сумму файла
\fIfile.txt\fP с помощью установленного по умолчанию алгоритма \fIstreebog256\fP
и помещает результат вычислений в файл \fIresult.txt\fP\&.:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool i file.txt \-o result.txt
.EE
.UNINDENT
.UNINDENT
.sp
Следующая последовательность вызовов позволяет
создать секретный ключ блочного алгоритма шифрования «Кузнечик»,
а после, вычислить имитовставки всех файлов,
удовлетворяющих шаблону \fB*.t??\fP (файлы, имеющие расширение из трех
символов, начинающееся с символа \fIt\fP) в текущем каталоге (на это указывает
символ \fI\&.\fP), а также во всех доступных вложенных каталогах. Для
вычисления кода целостности используется алгоритм ГОСТ Р 34.13\-2015.:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool k \-nt kuznechik \-o kuznechik.key
aktool i \-rp \(dq*.t??\(dq \-\-key kuznechik.key \-m cmac\-kuznechik .
.EE
.UNINDENT
.UNINDENT
.sp
Следующий вызов позволяет проверить контрольные суммы, содержащиеся в
выработанном ранее файле \fIresult.txt\fP\&.:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool i \-c result.txt
.EE
.UNINDENT
.UNINDENT
.sp
В состав исходных текстов библиотеки входит набор тестовых скриптов
(каталог \fIscripts\fP), содержащий большое количество примеров использования утилиты \fIaktool\fP
для выработки и проверки контрольных сумм и кодов аутентификации.
.SS Совместимость с другими программными средствами
.sp
Известны две общедоступные утилиты, позволяющие вычислять контрольные
суммы с помощью отечественных алгоритмов хеширования. Этими утилитами
являются:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
\X'tty: link https://github.com/gost-engine/engine'\fI\%gost12sum\fP\X'tty: link', которая входит в состав дополнительного модуля (engine) для хорошо известной программы \fIopenssl\fP,
.IP \(bu 2
\X'tty: link https://github.com/rhash/RHash'\fI\%rhash\fP\X'tty: link'\&.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Следующая последовательность команд позволяет продемонстрировать
эквивалентность работы всех трех утилит для алгоритма хеширования \fIstreebog256\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
echo \-n hello > test.file
aktool i test.file
3fb0700a41ce6e41413ba764f98bf2135ba6ded516bea2fae8429cc5bdd46d6d test.file

rhash \-G test.file
3fb0700a41ce6e41413ba764f98bf2135ba6ded516bea2fae8429cc5bdd46d6d test.file

gost12sum test.file
3fb0700a41ce6e41413ba764f98bf2135ba6ded516bea2fae8429cc5bdd46d6d test.file
.EE
.UNINDENT
.UNINDENT
.sp
Аналогично, для алгоритма хеширования \fIstreebog512\fP, запуск следующих
команд также позволит получить одинаковое значение хэш\-кода размером 512 бит:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
gost12sum \-l test.file
rhash \-\-gost12\-512 test.file
aktool i \-a streebog512 test.file
.EE
.UNINDENT
.UNINDENT
.sp
Программа \fIopenssl\fP также может вычислять контрольные суммы.
Например, следующий вызов позволит получить тот же результат, что и ранее,
но в другом формате:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
openssl dgst \-md_gost12_256 test.file > result.txt
cat result
md_gost12_256(test.file)=
     3fb0700a41ce6e41413ba764f98bf2135ba6ded516bea2fae8429cc5bdd46d6d
.EE
.UNINDENT
.UNINDENT
.sp
Утилита \fIaktool\fP может не только вырабатывать контрольные суммы в
таком же формате:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool i \-\-tag test.file
streebog256 (test.file) =
     3fb0700a41ce6e41413ba764f98bf2135ba6ded516bea2fae8429cc5bdd46d6d
.EE
.UNINDENT
.UNINDENT
.sp
но и проверять файлы, подготовленные программой \fIopenssl\fP, используя
единый синтаксис командной строки:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool i \-c result.txt \-\-dont\-show\-stat
.EE
.UNINDENT
.UNINDENT
.sp
При имитозащите данных утилита \fIaktool\fP совместима с программой \fIopenssl\fP
только при использовании явно заданных секретных ключей. Следующие вызовы применяют
для вычисления имитовставки функцию \fIhmac\-streebog256\fP и позволяют
получить одинаковый результат:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
openssl dgst \-md_gost12_256 \-mac hmac \-macopt hexkey:acabdcab0137 test.file
HMAC\-md_gost12_256(test.file)=
     31d56cc082c4cd57955119f4cde662b4554f867fcc08ee4d59ba32d0e604180d

aktool i \-a hmac\-streebog256 \-\-hexkey acabdcab0137 \-\-tag \-\-no\-derive test.file
hmac\-streebog256 (test.file) =
     31d56cc082c4cd57955119f4cde662b4554f867fcc08ee4d59ba32d0e604180d
.EE
.UNINDENT
.UNINDENT
.sp
Отметим, что в данном случае секретный ключ, используемый для вычисления
имитовставки, задается явно, в виде последовательности шестнадцатеричных
символов. Максимальная длина последовательности не должна превышать 64
октета (128 шестнадцатеричных символа). Для последовательностей меньшей
длины старшие октеты заполняются нулями. Аналогичная совместимость
поддерживается при использовании функции \fIhmac\-streebog512\fP\&.
.SH РАЗБОР ДАННЫХ В ФОРМАТЕ ASN.1
.sp
Команда \fIasn1parse\fP (короткая форма \fIa\fP) позволяет декодировать и выводить в консоль данные,
закодированные в формате ASN.1 дерева. В настоящее время
поддерживается разбор чистых \fIder\fP\-последовательностей, а также
\fIder\fP\-последовательностей, закодированных в кодировке \fIbase64\fP
(формат данных, который принято обозначать символом \fIpem\fP).
.SS Опции команды asn1parse
.INDENT 0.0
.TP
.B \-\-convert=файл
.UNINDENT
.sp
Опция позволяет выполнить конвертацию ASN.1 данных между поддерживаемыми форматами,
т.е. перевести данные из \fIder\fP\-формата в \fIpem\fP\-формат и наоборот.
Преобразование, изменение или удаление данных из ASN.1 дерева при конвертации не производится.
.INDENT 0.0
.TP
.B \-\-join
.UNINDENT
.sp
Призрачная опция
.INDENT 0.0
.TP
.B \-\-split=файл
.UNINDENT
.sp
Опция позволяет разделить ASN.1 дерево на одну или несколько ветвей первого уровня.
После разделения каждая ветвь образует новое ASN.1 дерево и помещается в отдельный файл.
Опция может применяться для разделения коллекций сертификатов открытых ключей на
отдельные файлы.
.INDENT 0.0
.TP
.B \-o, \-\-output=файл
.UNINDENT
.sp
Опция позволяет в явном виде определить
имя файла в который будут помещены конверированные или объединенные данные.
Данную опцию имеет смысл использовать совместно с опциями \fI\%\-\-convert\fP и \fI\%\-\-join\fP\&.
.INDENT 0.0
.TP
.B \-\-to=[ der, pem ]
.UNINDENT
.sp
Опция в явном виде указывает в каком формате должны быть сохранены данные.
.INDENT 0.0
.TP
.B \-\-pem=тип
.UNINDENT
.sp
Опция в явном виде позволяет определить заголовок строки
в \fIpem\fP\-файле, определяющий тип содержащихся далее данных.
Данную опцию имеет смысл использовать совместно с указанием опции \fI\%\-\-to\fP = \fBpem\fP\&.
При значении \fI\%\-\-to\fP = \fBder\fP значение опции игнорируется.
.SS Примеры использования
.sp
Рассмотрим запрос на создание сертифката открытого ключа,
записанный в pem кодировке в файле \fIrequest_edw.pem\fP\&. Данный запрос
содержится в качестве примера в рекомендациях Р 1323565.1.023\-2018, раздел А.2.2.1:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
\-\-\-\-\-BEGIN CERTIFICATE\-\-\-\-\-
MIHKMHkCAQAwEjEQMA4GA1UEAxMHRXhhbXBsZTBeMBcGCCqFAwcBAQEBMAsGCSqF
AwcBAgEBAQNDAARAdCeV1L7ohN3yhQ/sA+o/rxhE4B2dpgtkUJOlXibfw5l49ZbP
TU0MbPHRiUPZRJPRa57AoW1RLS4SfMRpGmMY4qAAMAoGCCqFAwcBAQMCA0EAG9wq
Exdnm2YjL2PqFv98ZMyqua2FX8bhgJFmHbedSBIdDh2lvjR8bxtSVseurCAK1krH
em9bOg4Jcxjnrm7naQ==
\-\-\-\-\-END CERTIFICATE\-\-\-\-\-
.EE
.UNINDENT
.UNINDENT
.sp
Декодирование данного файла может быть выполнено с помощью следующего вызова:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool a request_edw.pem
.EE
.UNINDENT
.UNINDENT
.sp
В результате декодирования в консоль должна быть выведена следующая
иерархическая структура:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
SEQUENCE
        ├SEQUENCE
        │        ├INTEGER 0x0
        │        ├SEQUENCE
        │        │        └SET
        │        │            └SEQUENCE
        │        │                     ├OBJECT IDENTIFIER 2.5.4.3
        │        │                     └PRINTABLE STRING Example
        │        ├SEQUENCE
        │        │        ├SEQUENCE
        │        │        │        ├OBJECT IDENTIFIER 1.2.643.7.1.1.1.1
        │        │        │        └SEQUENCE
        │        │        │                 └OBJECT IDENTIFIER 1.2.643.7.1.2.1.1.1
        │        │        └BIT STRING
        │        │           04 40 74 27 95 D4 BE E8 84 DD F2 85 0F EC 03 EA
        │        │           3F AF 18 44 E0 1D 9D A6 0B 64 50 93 A5 5E 26 DF
        │        │           C3 99 78 F5 96 CF 4D 4D 0C 6C F1 D1 89 43 D9 44
        │        │           93 D1 6B 9E C0 A1 6D 51 2D 2E 12 7C C4 69 1A 63
        │        │           18 E2
        │        └[0]
        │             (null)
        ├SEQUENCE
        │        └OBJECT IDENTIFIER 1.2.643.7.1.1.3.2
        └BIT STRING
           1B DC 2A 13 17 67 9B 66 23 2F 63 EA 16 FF 7C 64
           CC AA B9 AD 85 5F C6 E1 80 91 66 1D B7 9D 48 12
           1D 0E 1D A5 BE 34 7C 6F 1B 52 56 C7 AE AC 20 0A
           D6 4A C7 7A 6F 5B 3A 0E 09 73 18 E7 AE 6E E7 69
.EE
.UNINDENT
.UNINDENT
.sp
Следующий вызов демонстрирует
пример конвертирования ASN.1 дерева, сохраненного в виде
\fIder\fP\-последовательности, в формат \fIpem\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool a \-\-convert request_edw.p10 \-\-to pem \-\-pem request \-o request_edw.pem
.EE
.UNINDENT
.UNINDENT
.sp
Следующий вызов иллюстрирует, как можно разделить коллекцию сертификатов
\fIca\-bundle.crt\fP на отдельные файлы:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool a \-\-split ca\-bundle.crt \-\-to pem \-\-pem certificate
.EE
.UNINDENT
.UNINDENT
.SH ВЫВОД СЛУЖЕБНОЙ И ВСПОМОГАТЕЛЬНОЙ ИНФОРМАЦИИ
.sp
Команда \fIshow\fP (короткая форма \fIs\fP) позволяет получить информацию о доступных
преобразованиях, параметрах криптографических ключей, значениях технических и
криптографических характеристик, а также параметрах библиотеки по\-умолчанию.
.SS Опции команды show
.INDENT 0.0
.TP
.B \-\-curve=имя
.UNINDENT
.sp
Опция позволяет вывести в консоль явные значения параметров эллиптической кривой с заданным именем
или идентификатором.
.INDENT 0.0
.TP
.B \-\-engines
.UNINDENT
.sp
Опция позволяет вывести список всех типов криптографических
механизмов, которые могут быть использованы в приложениях библиотеки \fIlibakrypt\fP\&.
К таким типам, например, относятся блочные шифры или алгоритмы выработки имитовставки.
.INDENT 0.0
.TP
.B \-\-oid=строка
.UNINDENT
.sp
Опция принимает в качестве параметра произвольную строку символов
и выводит все доступные
криптографические механизмы, в именах или идентификаторах которых
содержится указанная строка.
.INDENT 0.0
.TP
.B \-\-oids
.UNINDENT
.sp
Опция позволяет вывести список всех доступных криптографических
механизмов. Каждый механизм идентифицируется свои именем, которое
используется для его указания пользователем и/или
последовательностью чисел, разделенных точками. Последняя
последовательность называется \fBObject IDentifier\fP (OID) и используется
при автоматизированной обработке данных.
.INDENT 0.0
.TP
.B \-\-options
.UNINDENT
.sp
Опция выводит перечень всех криптографических параметров библиотеки,
а также их значений. К указанным параметрам относятся, например,
число блоков информации, которые могут быть зашифрованы на одном
ключе, или число итераций криптографической функции \fIPBKDF2\fP,
используемой для развертки ключа из пароля. Значения параметров
содержатся в файле \fIlibakrypt.conf\fP, расположенном либо в
системном каталоге (по\-умолчанию, это \fI/etc\fP),
либо в домашнем каталоге пользователя (\fI/${HOME}/.config/libakrypt\fP).
.INDENT 0.0
.TP
.B \-\-modes
.UNINDENT
.sp
Опция позволяет вывести список всех режимов криптографических
преобразований, которыми могут быть охарактеризованы
криптографические преобразования. При этом одному типу криптографического
механизма может соответствовать несколько режимов. Например, функция
хеширования имеет режим \fIalgorithm\fP, а ее параметры \fIkbox params\fP\&.
.INDENT 0.0
.TP
.B \-\-without\-caption
.UNINDENT
.sp
Опция запрещает печать заголовка, расшифровывающего названия
выводимых параметров и их значений.
.SS Примеры использования
.sp
Наиболее употребимым вариантом вызова команды \fIshow\fP является вызов:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool s \-\-oids
.EE
.UNINDENT
.UNINDENT
.sp
В результате данного вызова будет выведена информация
о всех доступных библиотеке \fIlibakrypt\fP криптографических преобразованиях.
Например, среди прочих, будет выведена  информация об алгоритме
блочного шифрования Кузнечик, см. ГОСТ Р 34.12\-2015:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
 N  oid                 name(s)          engine            mode
\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
10  1.2.643.7.1.1.5.2   kuznechik        block cipher      algorithm
                        kuznyechik
                        grasshopper
.EE
.UNINDENT
.UNINDENT
.sp
В данной таблице указаны:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
порядковый номер криптографического механизма,
.IP \(bu 2
идентификатор (последовательность цифр, разделенных точками),
.IP \(bu 2
перечень имен, с помощью которых пользователь может именовать криптографический механизм,
.IP \(bu 2
тип криптографического механизма,
.IP \(bu 2
режим использования.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Выборочный поиск идентификаторов можно осуществить с помощью опции \fI\%\-\-oid\fP (без \fIs\fP на конце). Например,
следующий вызов позволяет найти все идентификаторы, имена которых
регламентированы Техническим комитетом «Криптографическая защита информации» (ТК26):
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool s \-\-oid tc26
.EE
.UNINDENT
.UNINDENT
.sp
Получить параметры эллиптической кривой можно с помощью следующего вызова:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool s \-\-curve axeln0
.EE
.UNINDENT
.UNINDENT
.sp
После чего, в консоль будет выведена следующая информация:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
curve: id\-axel\-gost\-3410\-2012\-256\-paramSetN0
       axeln0
oid:   1.2.643.2.52.1.12.1.1
forms:
   short Weierstrass form:   y^2 = x^3 + ax + b (mod p)
parameters:
   a =  0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd2158
   b =  0x42dfde56dd26bb76eba94ce9565e562bed1fb994675632a264afef327aa4e5ff
   p =  0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd215b
   q =  0xffffffffffffffffffffffffffffffff2c1b759991830c6b5dcc785b195c4edb
   c =  0x01 [cofactor]
point:
  px =  0x0000000000000000000000000000000000000000000000000000000000000002
  py =  0x011e47b6e40dc7f783b9f4fc84d085884b9b88ca9ec7da8c5567c9d87f68a17f
.EE
.UNINDENT
.UNINDENT
.sp
Перечень всех известных библиотеке идентификаторов эллиптических кривых
может быть получен с помощью следующего вызова:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool s \-\-oid curve
.EE
.UNINDENT
.UNINDENT
.SH ТЕСТИРОВАНИЕ КРИПТОГРАФИЧЕСКИХ АЛГОРИТМОВ
.sp
Команда \fItest\fP позволяет провести тестированние
корректности и скорости реализации криптографических алгоритмов.
.SS Опции команды test
.INDENT 0.0
.TP
.B \-\-crypto
.UNINDENT
.sp
Опция запускает процесс тестирования
всех реализованных в библиотеке \fIlibakrypt\fP
криптографических преобразований. В ходе тестирования
проверяется совпадение вычисляемых значений со значениями, приведенными в различных
регламетирующих документах (см., далее, раздел «Стандарты»).
В ряде случае проверяется
совпадение результатов, полученных при помощи нескольких доступных реализаций.
.INDENT 0.0
.TP
.B \-\-list\-engines
.UNINDENT
.sp
Опция выводит список всех доступных для тестирования криптографических механизмов.
.INDENT 0.0
.TP
.B \-\-list\-modes
.UNINDENT
.sp
Опция выводит список всех доступных для тестирования режимов криптографических механизмов.
.INDENT 0.0
.TP
.B \-e, \-\-speed\-by\-engine=имя
.UNINDENT
.sp
Опция позволяет выполнить тест скорости реализации всех преобразований,
относящихся к указанному криптографическому механизму.
Список всех доступных механизмов может быть получен с использованием опции \fI\%\-\-list\-engines\fP\&.
.INDENT 0.0
.TP
.B \-m, \-\-speed\-by\-mode=имя
.UNINDENT
.sp
Опция позволяет выполнить тест скорости реализации всех криптографических механизмов
с заданным режимом, например, всех доступных блочных шифров в режиме гаммирования.
Список всех доступных режимов может быть получен с использованием опции \fI\%\-\-list\-modes\fP\&.
.INDENT 0.0
.TP
.B \-n, \-\-speed\-by\-name=имя
.UNINDENT
.sp
Опция позволяет выполнить тест скорости реализации всех криптографических алгоритмов,
в имени которых содержится заданная строка символов.
.INDENT 0.0
.TP
.B \-\-min\-length
.UNINDENT
.sp
Опция устанавливает минимальную длину данных (в мегабайтах), используемую для тестирования
криптографических механизмов шифрования и имитозащиты.
Значение по умолчанию: 16МБ.
.INDENT 0.0
.TP
.B \-\-max\-length
.UNINDENT
.sp
Опция устанавливает максимальную длину данных (в мегабайтах), используемую для тестирования
криптографических механизмов шифрования и имитозащиты.
Значение по умолчанию: 128МБ.
.INDENT 0.0
.TP
.B \-\-no\-large\-arrays
.UNINDENT
.sp
Опция отменяет тестирование больших объемов данных для криптографических механизмов
шифрования и имитозащиты.
.INDENT 0.0
.TP
.B \-\-no\-packets
.UNINDENT
.sp
Опция отменяет тестирование коротких фрагметов данных (пакетного режима тестирования)
для криптографических механизмов шифрования и имитозащиты.
.SS Примеры использования
.sp
Для запуска полного теста, с выводом информации об ошибках и выполняемях событиях в стандартный поток вывода ошибок (stderr),
достаточно выполнить следующую команду:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool test \-\-crypto \-\-audit 2 \-\-audit\-file stderr
.EE
.UNINDENT
.UNINDENT
.sp
Для тестирования скорости работы могут быть использованы следующие команды:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool t \-n magma \-\-verbose
aktool t \-e hmac
aktool t \-m aead
aktool t \-n sign
.EE
.UNINDENT
.UNINDENT
.sp
Использование опции \fI\%\-\-verbose\fP позволяет получить дополнительную информацию
о процессе измерения времени выполнения тестов.
.SH ОПЦИИ, ОБЩИЕ ДЛЯ ВСЕХ КОМАНД
.sp
Утилита содерджит ряд специальных опций, которые могут применяться со всеми доступными командами.
.INDENT 0.0
.TP
.B \-\-audit=[ 0, 1, 2 ]
.UNINDENT
.sp
Опция позволяет задать уровень вывода сообщений работы программы
(в виде целого неотрицательного числа):
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
уровень 0 разрешает вывод только сообщений об ошибках,
.IP \(bu 2
уровень 1 определяет вывод минимального набора сообщений,
.IP \(bu 2
уровень 2 позволяет вывести дополнительные сведения о выполняющихся криптографических преобразованиях.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-audit\-file=файл
.UNINDENT
.sp
Опция позволяет определить файл, в который будут помещаться сообщения о процессе работы программы
и ошибках её выполнения. В случае, если аргумент опции принимает значение \fIstderr\fP,
то используется системный канал вывода ошибок.
.INDENT 0.0
.TP
.B \-\-confirm
.UNINDENT
.sp
Удаление файлов без их подтверждения пользователем (может привести к безвозвратной потере полезных данных).
.INDENT 0.0
.TP
.B \-\-dont\-use\-colors
.UNINDENT
.sp
Для акцентирования внимания пользователя утилита использует цветовое выделение при
выводе некоторых данных. К таким данным относятся коды ошибок, сообщения об автоматическом
декодировании ASN.1 деревьев и т.п. Данная опция запрещает цветовое выделения.
.INDENT 0.0
.TP
.B \-h, \-\-help
.UNINDENT
.sp
Вывод справки о доступных опциях заданной команды.
.INDENT 0.0
.TP
.B \-\-hex\-input
.UNINDENT
.sp
Опция указывает, что все вводимые с консоли пароли и идентификаторы должны интерпретироваться
как последовательности шестнадцатеричных символов.
.INDENT 0.0
.TP
.B \-\-openssl\-style
.UNINDENT
.sp
Опция позволяет использовать нестандартизированные форматы представления данных
для некоторых криптографических алгоритмов, аналогично тому,
как они реализованы в \X'tty: link https://github.com/gost-engine/engine'\fI\%gost\-engine\fP\X'tty: link' библиотеки \fIopenssl\fP\&.
.INDENT 0.0
.TP
.B \-\-quiet
.UNINDENT
.sp
В случае использования опции программа не выводит ни каких сообщений. Результат ее работы
может быть получен с помощью кода возврата.
.INDENT 0.0
.TP
.B \-\-verbose
.UNINDENT
.sp
Опция позволяет вывести в консоль дополнительные сведения о выполняемых операциях.
Также опция расширяет перечень сообщений, выводимых с помощью установленной системы аудита.
.SS Примеры использования
.sp
Следующий вызов содержит
пример перенаправления вывода утилиты \fIaktool\fP с запрещением использования цвета
на вход программы просмотра \fIless\fP (запрет использования цвета убирает управляющие команды,
которые не могут быть обработаны утилитой просмотра):
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool a 0408435EB90E5C8796A160E69E4BFAC453435D1D.cer \-\-dont\-use\-colors | less
.EE
.UNINDENT
.UNINDENT
.sp
Запуск теста криптографических алгоритмов с максимальным аудитом криптографических событий
и выводом сообщений в стандартный канал вывода ошибок:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
aktool test \-\-crypto \-\-audit 2 \-\-audit\-file stderr
.EE
.UNINDENT
.UNINDENT
.SH СТАНДАРТЫ
.sp
Реализованные утилитой \fIaktool\fP криптографические преобразования и форматы данных
соотвествуют следующим стандартам Российской Федерации и рекомендациям по стандартизации
Технического комитета РФ «\X'tty: link https://tc26.ru/standarts/'\fI\%Криптографическая защита информации\fP\X'tty: link'».
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
ГОСТ Р 34.10\-2012 Процессы формирования и проверки электронной подписи,
.IP \(bu 2
ГОСТ Р 34.11\-2012 Функция хэширования,
.IP \(bu 2
ГОСТ Р 34.12\-2015 Блочные шифры,
.IP \(bu 2
ГОСТ Р 34.13\-2015 Режимы работы блочных шифров.
.IP \(bu 2
Р 50.1.113\-2016 Криптографические алгоритмы, сопутствующие применению алгоритмов электронной цифровой подписи и функции хэширования,
.IP \(bu 2
Р 1323565.1.012\-2017 Принципы разработки и модернизации шифровальных (криптографических) средств защиты информации,
.IP \(bu 2
Р 1323565.1.017\-2018 Криптографические алгоритмы, сопутствующие применению алгоритмов блочного шифрования,
.IP \(bu 2
Р 1323565.1.022\-2018 Функции выработки производного ключа,
.IP \(bu 2
Р 1323565.1.023\-2018 Использование алгоритмов ГОСТ Р 34.10\-2012, ГОСТ Р 34.11\-2012 в сертификате, списке аннулированных сертификатов (CRL) и запросе на сертификат PKCS #10 инфраструктуры открытых ключей X.509,
.IP \(bu 2
Р 1323565.1.024–2019 Параметры эллиптических кривых для криптографических алгоритмов и протоколов,
.IP \(bu 2
Р 1323565.1.026–2019 Режимы работы блочных шифров, реализующие аутентифицированное шифрование,
.IP \(bu 2
Р 1323565.1.028–2019 Криптографические механизмы защищенного взаимодействия контрольных и измерительных устройств.
.IP \(bu 2
Р 1323565.1.040\-2022 Парольная защита ключевой информации (взамен Р 50.1.111\-2016),
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Также реализованы алгоритмы и форматы данных, регламентированные зарубежными рекомендациями.
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
IEEE 1619\-2007 IEEE Standard for Cryptographic Protection of Data on Block\-Oriented Storage Devices,
.IP \(bu 2
RFC 5652. Cryptographic Message Syntax (CMS).
.UNINDENT
.UNINDENT
.UNINDENT
.SH AUTHOR
Алексей Юрьевич Нестеренко
.SH COPYRIGHT
2014 - 2024, Алексей Юрьевич Нестеренко, МИЭМ
.\" Generated by docutils manpage writer.
.
